name: Cleanup Invalid Files

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Find invalid Python files and delete them
        run: |
          echo "üîç Scanning Python files..."

          VALID_REGEX="^[-a-zA-Z'√©√®√°√†√≠√¨√≥√≤√∫√π√§√∂√º√±√ß√â√à√Å√Ä√ç√å√ì√í√ö√ô√Ñ√ñ√ú√ë√á]+_[-a-zA-Z'√©√®√°√†√≠√¨√≥√≤√∫√π√§√∂√º√±√ß√â√à√Å√Ä√ç√å√ì√í√ö√ô√Ñ√ñ√ú√ë√á]+\.py$"

          INVALID_FILES=()

          while IFS= read -r file; do
            filename=$(basename "$file")
            if [[ ! "$filename" =~ $VALID_REGEX ]]; then
              echo "‚ùå Invalid: $file"
              INVALID_FILES+=("$file")
            else
              echo "‚úÖ Valid: $file"
            fi
          done < <(find . -type f -name "*.py")

          # Delete invalid files
          if [ "${#INVALID_FILES[@]}" -eq 0 ]; then
            echo "‚úÖ No invalid Python files found."
            exit 0
          fi

          echo "üóëÔ∏è Deleting ${#INVALID_FILES[@]} invalid file(s)..."
          for file in "${INVALID_FILES[@]}"; do
            rm -f "$file"
          done

      - name: Commit and push deletions
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add -u
          if git diff --cached --quiet; then
            echo "üü¢ No changes to commit."
          else
            git commit -m "Removed invalid Python files (auto-cleanup)"
            git push origin HEAD
            echo "‚úÖ Deletions committed and pushed."
          fi


